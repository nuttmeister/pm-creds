name: "release"

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: "release"
    runs-on: "macos-latest"

    steps:
      - name: "checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 0
      - name: "setup go"
        uses: "actions/setup-go@v2"
        with:
          go-version: "1.16"
      - name: "setup macos cert"
        run: |
          CERTIFICATE=cert.p12
          echo ${AC_CERTIFICATE} | base64 --decode > $CERTIFICATE
          KEY_CHAIN=build.keychain
          security create-keychain -p actions ${KEY_CHAIN}
          security default-keychain -s ${KEY_CHAIN}
          security unlock-keychain -p actions ${KEY_CHAIN}
          security import ${CERTIFICATE} -k ${KEY_CHAIN} -P ${AC_CERTIFICATE_PASSWORD} -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k actions ${KEY_CHAIN}
          rm -rf ${CERTIFICATE}
        env:
          AC_CERTIFICATE: "${{ secrets.AC_CERTIFICATE }}"
          AC_CERTIFICATE_PASSWORD: "${{ secrets.AC_CERTIFICATE_PASSWORD }}"
      - name: "build"
        run: |
          mkdir -p dist
          ./build.sh darwin arm64
          ./build.sh darwin amd64
          ./build.sh linux arm64
          ./build.sh linux amd64
          ./build.sh linux 386
          ./build.sh windows amd64
          ./build.sh windows 386
        env:
          AC_APPID: "${{ secrets.AC_APPID }}"
          AC_USERNAME: "${{ secrets.AC_USERNAME }}"
          AC_PASSWORD: "${{ secrets.AC_PASSWORD }}"
      - uses: "ncipollo/release-action@v1"
        with:
          draft: true
          artifacts: "dist/*.zip"
          token: "${{ secrets.GITHUB_TOKEN }}"
      - name: "clean dist"
        run: "rm -rf dist"